name: 'RepoDynamics Context'
description: 'Add workflow contexts to GitHub Actions job summaries.'
author: 'Armin Ariamajd'
branding:
  icon: file-text
  color: blue


inputs:
  event-payload:
    description: |
      Include the event payload, i.e. the `github.event` context.
    default: true
    required: false
  github:
    description: |
      Include the `github` context (this does not include the event payload).
    default: true
    required: false
  env:
    description: |
      Include the `env` context.
    default: true
    required: false
  job:
    description: |
      Include the `job` context.
    default: true
    required: false
  steps:
    description: |
      Include the `steps` context.
    default: false
    required: false
  runner:
    description: |
      Include the `runner` context.
    default: true
    required: false
  strategy:
    description: |
      Include the `strategy` context.
    default: false
    required: false
  matrix:
    description: |
      Include the `matrix` context.
    default: false
    required: false



runs:
  using: "composite"
  steps:

    - name: 'Initialize'
      shell: bash
      run: |
        # Intro
        printf "\n\n$(cat ${{github.action_path}}/logo.txt)\n\n\n"
        echo -e "\n\033[1;30;43m Setup Python "

    - name: 'Setup Python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: 'Install Repodynamics'
      run: |
        # Install Repodynamics
        echo -e "\n\033[1;30;43m Install Repodynamics "
        pip install repodynamics[context]
      shell: bash

    - name: "Run"
      run: |
        # Run
        echo -e "\n\033[1;30;43m Create Summary "
        python -m repodynamics.actions context
      shell: bash
      env:
        RD_CONTEXT__GITHUB: ${{ toJson(github) }}
        RD_CONTEXT__ENV: ${{ toJson(env) }}
        RD_CONTEXT__JOB: ${{ toJson(job) }}
        RD_CONTEXT__STEPS: ${{ toJson(steps) }}
        RD_CONTEXT__RUNNER: ${{ toJson(runner) }}
        RD_CONTEXT__STRATEGY: ${{ toJson(strategy) }}
        RD_CONTEXT__MATRIX: ${{ toJson(matrix) }}
        RD_CONTEXT__INPUTS: ${{ toJson(inputs) }}
